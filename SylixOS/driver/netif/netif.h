/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                       SylixOS(TM)
**
**                               Copyright  All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: netif.h
**
** 创   建   人: Yu.KangZhi (余康志)
**
** 文件创建日期: 2019 年 1 月 17 日
**
** 描        述: K210 处理器 DM9051 SPI 网卡驱动头文件
*********************************************************************************************************/

#ifndef __NETIF_H
#define __NETIF_H

#include "driver/pinmux/pin_cfg.h"
/*********************************************************************************************************
  链接速度
  LINK_SPEED_AUTO   : 驱动将使能自动协商
  LINK_SPEED_xxx_xx : 驱动禁止自动协商, 并设置为指定的速度.
  注          意  : 在文件ethtool.h中也定义的 SPEED_1000 等宏
*********************************************************************************************************/
typedef enum {
    DM9051_10MHD    = 0,
    DM9051_100MHD   = 1,
    DM9051_10MFD    = 4,
    DM9051_100MFD   = 5,
    DM9051_10M      = 6,
    DM9051_AUTO     = 8,
    DM9051_1M_HPNA  = 0x10
} LINK_SPEED;

#define ENET_STATUS_LINK_ON     (0x80000000)
/*********************************************************************************************************
  ENET 控制器 FIFO/DMA 工作描述符结构体
*********************************************************************************************************/
typedef struct {
    UINT32    uiStatus;                                                 /*  DMA 控制块状态              */
    UINT32    uiSize;                                                   /*  DMA 控制块缓存大小          */
    UINT32    uiAddr;                                                   /*  DMA 控制块缓存地址          */
    UINT32    uiNext;                                                   /*  DMA 控制块链表下一个指针    */
} DMA_BUF_DESC;
/*********************************************************************************************************
  ENET 私有结构
*********************************************************************************************************/
typedef struct enet {
    PLW_SPI_DEVICE       ENET_pSpiNetDev;
    PHY_DEV             *ENET_phy_dev;
    struct  netdev      *ENET_pNetDev;

    UINT                 ENET_uiSpiChannel;
    ULONG                ENET_ulIrqLine;
    UINT                 ENET_uiPhyMode;
    UINT                 ENET_uiNetifType;
    UINT32               ENET_uiLinkStatus;

    LW_OBJECT_HANDLE     ENET_lock;
    LW_OBJECT_HANDLE     ENET_tx_sync;

    DMA_BUF_DESC        *ENET_pRxDesc;                                  /*  接收控制块指针              */
    DMA_BUF_DESC        *ENET_pTxDesc;                                  /*  发送控制块指针              */
    UINT8               *ENET_pRxBuffer;                                /*  接收缓存                    */
    UINT8               *ENET_pTxBuffer;                                /*  发送缓存                    */
    UINT32               ENET_uiRxDescNum;                              /*  接收块编号                  */
    UINT32               ENET_uiTxDescNum;                              /*  发送块编号                  */
} ENET;
/*********************************************************************************************************
  为SPI-NETIF-ISR准备的裸机的传输接口
*********************************************************************************************************/
INT  spi_netif_transfer_shell(INT uiChannel, PLW_SPI_MESSAGE pSpiMsg);
/*********************************************************************************************************
  功能函数
*********************************************************************************************************/
INT  enetInit(LINK_SPEED  linkspeed, fpioa_cfg_t *pFpioaConfig, UINT  uiSpiChannel);

#endif                                                                  /*  __NETIF_H                   */
/*********************************************************************************************************
  END
*********************************************************************************************************/
